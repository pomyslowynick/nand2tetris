// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=true, sel=address, a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh);

    And(a=outa, b=load, out=outReg0);
    And(a=outb, b=load, out=outReg1);
    And(a=outc, b=load, out=outReg2);
    And(a=outd, b=load, out=outReg3);
    And(a=oute, b=load, out=outReg4);
    And(a=outf, b=load, out=outReg5);
    And(a=outg, b=load, out=outReg6);
    And(a=outh, b=load, out=outReg7);

    Register(in=in, load=outReg0, out=reg0);
    Register(in=in, load=outReg1, out=reg1);
    Register(in=in, load=outReg2, out=reg2);
    Register(in=in, load=outReg3, out=reg3);
    Register(in=in, load=outReg4, out=reg4);
    Register(in=in, load=outReg5, out=reg5);
    Register(in=in, load=outReg6, out=reg6);
    Register(in=in, load=outReg7, out=reg7);
    
    Mux8Way16(a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7, sel=address, out=out);
}