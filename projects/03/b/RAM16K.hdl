// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=true, sel=address[0..1], a=outa, b=outb, c=outc, d=outd);

    And(a=outa, b=load, out=outReg0);
    And(a=outb, b=load, out=outReg1);
    And(a=outc, b=load, out=outReg2);
    And(a=outd, b=load, out=outReg3);


    RAM4K(in=in, load=outReg0, address=address[2..13], out=reg0);
    RAM4K(in=in, load=outReg1, address=address[2..13], out=reg1);
    RAM4K(in=in, load=outReg2, address=address[2..13], out=reg2);
    RAM4K(in=in, load=outReg3, address=address[2..13], out=reg3);

    
    Mux4Way16(a=reg0, b=reg1, c=reg2, d=reg3, sel=address[0..1], out=out);
}